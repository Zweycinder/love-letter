name: Build & Release Flutter APK

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release Name (e.g., Version 1.0.0)'
        required: true
      prerelease:
        description: 'Is this a pre-release? (true/false)'
        required: false
        default: 'false'

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'  # Set your Flutter version
          channel: 'stable'

      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build/
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            flutter-${{ runner.os }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: ${{ github.event.inputs.release_name }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
